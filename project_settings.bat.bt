@echo off
echo 🚀 Configurando Prototipo_chatbot...
echo.

REM Crear entorno virtual
echo 📦 Creando entorno virtual...
python -m venv venv
if %errorlevel% neq 0 (
    echo ❌ Error creando entorno virtual
    pause
    exit /b 1
)

REM Activar entorno virtual
echo 🔄 Activando entorno virtual...
call venv\Scripts\activate.bat

REM Actualizar pip
echo 📋 Actualizando pip...
python -m pip install --upgrade pip

REM Instalar dependencias básicas primero
echo 📦 Instalando dependencias básicas...
pip install flask pyyaml python-dotenv

REM Crear directorios necesarios
echo 📁 Creando directorios...
mkdir config 2>nul
mkdir logs 2>nul
mkdir data\vectorstore\faiss 2>nul
mkdir data\vectorstore\chromadb 2>nul
mkdir data\documents 2>nul
mkdir data\temp 2>nul

REM Crear archivo .env básico
echo 📄 Creando archivo .env...
(
echo # Prototipo_chatbot - Variables de Entorno
echo FLASK_ENV=development
echo FLASK_DEBUG=True
echo SECRET_KEY=prototipo-chatbot-dev-secret-key
echo DEFAULT_LOCAL_MODEL=ollama:llama3.1:8b
echo DEFAULT_OPENAI_MODEL=gpt-4
echo EMBEDDING_MODEL=all-MiniLM-L6-v2
echo DEFAULT_VECTOR_STORE=faiss
echo RAG_K_DEFAULT=5
echo LOG_LEVEL=INFO
echo DEVELOPMENT_MODE=True
) > .env

REM Instalar todas las dependencias
echo 📦 Instalando todas las dependencias...
pip install -r requirements.txt
if %errorlevel% neq 0 (
    echo ⚠️ Algunas dependencias fallaron, pero continuando...
)

REM Verificar instalación
echo 🔍 Verificando instalación...
python -c "import flask; print('✅ Flask instalado correctamente')" 2>nul || echo "❌ Flask no disponible"
python -c "import yaml; print('✅ PyYAML instalado correctamente')" 2>nul || echo "❌ PyYAML no disponible"

echo.
echo ✅ Setup completado!
echo.
echo 🚀 Para iniciar la aplicación:
echo    1. Activar entorno: venv\Scripts\activate.bat
echo    2. Ejecutar: python run.py
echo.
echo 🌐 Luego abrir: http://localhost:5000
echo.
pause